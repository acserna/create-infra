version: 2.1
defaults: &defaults
  docker: 
      -  image: amazon/aws-cli

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
          --template-file bucket.yml \
          --stack-name "acsr-${CIRCLE_WORKFLOW_ID:0:7}" \
          --parameter-overrides NAME=acsr-${CIRCLE_WORKFLOW_ID:0:7}
      - run: |
          aws s3 sync . s3://"acsr-${CIRCLE_WORKFLOW_ID:0:7}" --delete
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: yum install -y tar
      - run: yum install -y gzip
      - run: |
          aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/deployment_id.txt
      - run: cat ~/deployment_id.txt
      - run: |
          aws cloudformation \
            list-exports --query "Exports[?Name==\`StackName\`].Value" \
            --no-paginate --output text > ~/stack_name.txt
      - run: cat ~/stack_name.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - deployment_id.txt
            - stack_name.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="acsr-${CIRCLE_WORKFLOW_ID:0:7}"
    
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar
      - run: yum install -y gzip
      - attach_workspace:
          at: ~/
      - run: |
          cat ~/deployment_id.txt
          cat ~/stack_name.txt
          OldPipelineID=$(cat ~/deployment_id.txt)
          echo $OldPipelineID
          PreviousStackName=$(cat ~/stack_name.txt)
          echo $PreviousStackName
          aws s3 rm s3://${OldPipelineID} --recursive
          #aws cloudformation delete-stack --stack-name ${PreviousStackName}
      
workflows:
  my_workflow:
    jobs:
      -  create_and_deploy_front_end
      -  get_last_deployment_id:
            requires: 
              -  create_and_deploy_front_end
      -  promote_to_production:
            requires: 
              -  get_last_deployment_id
      -  clean_up_old_front_end:
            requires: 
              -  promote_to_production